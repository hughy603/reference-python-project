name: Python CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install hatch
          hatch env create

      - name: Run tests with coverage
        run: |
          hatch run test:cov
          # Ensure coverage meets the 90% threshold
          python -c "import xml.etree.ElementTree as ET; tree = ET.parse('coverage.xml'); root = tree.getroot(); coverage = float(root.attrib['line-rate']) * 100; print(f'Coverage: {coverage:.2f}%'); exit(0 if coverage >= 90 else 1)"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          fail_ci_if_error: false

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: |
            coverage.xml
            htmlcov/
          retention-days: 14

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip

      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          python -m pip install pre-commit

      - name: Run pre-commit hooks
        run: |
          pre-commit run --all-files

  type-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install hatch
          hatch env create

      - name: Run mypy
        run: |
          hatch run lint:type

      - name: Run pyright
        run: |
          python -m pip install pyright
          pyright python_modules

  build:
    runs-on: ubuntu-latest
    needs: [test, lint, type-check]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install hatch

      - name: Build package
        run: |
          hatch build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  coverage-report:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4

      - name: Download coverage results
        uses: actions/download-artifact@v4
        with:
          name: code-coverage-report
          path: coverage-report

      - name: Generate coverage badge
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: ${{ secrets.COVERAGE_GIST_ID || 'placeholder' }}
          filename: python-coverage.json
          label: Coverage
          message: ${{ env.COVERAGE }}%
          minColorRange: 90
          maxColorRange: 100
          valColorRange: ${{ env.COVERAGE }}
          color: ${{ env.COVERAGE >= 90 && 'brightgreen' || 'red' }}
        env:
          COVERAGE: $(python -c "import xml.etree.ElementTree as ET; tree = ET.parse('coverage-report/coverage.xml'); root = tree.getroot(); print('{:.2f}'.format(float(root.attrib['line-rate']) * 100))")

      - name: Display coverage report URL
        run: |
          echo "Coverage report available at: https://codecov.io/gh/${{ github.repository }}"
