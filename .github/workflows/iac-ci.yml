name: Infrastructure as Code CI

on:
  pull_request:
    branches: [main]
    paths:
      - 'infrastructure/**'
      - '.github/workflows/iac-ci.yml'

jobs:
  terraform-validate:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infrastructure/terraform
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0

      - name: Terraform Format
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: |
          find . -type f -name "*.tf" -not -path "*/\.*" | sort | xargs dirname | uniq | xargs -I {} sh -c 'cd {} && terraform init -backend=false'

      - name: Terraform Validate
        run: |
          find . -type f -name "*.tf" -not -path "*/\.*" | sort | xargs dirname | uniq | xargs -I {} sh -c 'cd {} && terraform validate'

      - name: Run TFLint
        uses: terraform-linters/tflint-action@v4
        with:
          recursive: true

      - name: Run checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: infrastructure/terraform
          framework: terraform
          skip_check: CKV_AWS_40,CKV_AWS_79
          quiet: true
          output_format: github_failed_only

  terraform-coverage:
    runs-on: ubuntu-latest
    needs: [terraform-validate]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install opa conftest terraform-coverage

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0

      - name: Run terraform-coverage
        run: |
          mkdir -p coverage-reports
          # Run terraform-coverage on each module
          find infrastructure/terraform -type d -name "modules" -o -path "*/terraform/*" | grep -v ".terraform" | while read dir; do
            if [ -f "$dir/main.tf" ]; then
              echo "Checking coverage for: $dir"
              cd $dir
              # Run terraform-coverage and capture output
              terraform-coverage -minimum 90 | tee -a $GITHUB_WORKSPACE/coverage-reports/terraform-coverage.txt || FAILED=1
              cd - > /dev/null
            fi
          done
          # Check if any test failed
          if [ "$FAILED" = "1" ]; then
            echo "Some terraform modules do not meet 90% coverage requirement"
            exit 1
          fi

      - name: Run OPA policy tests
        run: |
          # Run OPA policy validation
          cd infrastructure/terraform
          conftest test . --policy ../terraform/policy --output table | tee -a $GITHUB_WORKSPACE/coverage-reports/opa-results.txt

      - name: Archive coverage results
        uses: actions/upload-artifact@v4
        with:
          name: terraform-coverage-reports
          path: coverage-reports/
          retention-days: 14

  cloudformation-validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cfn-lint aws-sam-cli

      - name: Validate CloudFormation templates
        run: |
          cfn-lint infrastructure/cloudformation/**/*.yaml

      - name: Security scan with cfn_nag
        uses: stelligent/cfn_nag@master
        with:
          input_path: infrastructure/cloudformation
          extra_args: --fail-on-warnings

  cost-estimation:
    runs-on: ubuntu-latest
    needs: [terraform-validate, terraform-coverage, cloudformation-validate]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Infracost
        uses: infracost/actions/setup@v3
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Generate Infracost breakdown
        run: |
          infracost breakdown --path=infrastructure/terraform --format=json --out-file=infracost.json

      - name: Update PR with Infracost comment
        uses: infracost/actions/comment@v3
        with:
          path: infracost.json
          behavior: update
          show-all-resources: true

  coverage-summary:
    runs-on: ubuntu-latest
    needs: [terraform-coverage]
    steps:
      - name: Download coverage results
        uses: actions/download-artifact@v4
        with:
          name: terraform-coverage-reports
          path: coverage-reports

      - name: Generate coverage summary
        run: |
          echo "## Terraform Coverage Summary" > coverage-summary.md
          echo "" >> coverage-summary.md
          echo "### Terraform Modules Coverage" >> coverage-summary.md
          echo "```" >> coverage-summary.md
          cat coverage-reports/terraform-coverage.txt >> coverage-summary.md
          echo "```" >> coverage-summary.md
          echo "" >> coverage-summary.md
          echo "### OPA Policy Validation" >> coverage-summary.md
          echo "```" >> coverage-summary.md
          cat coverage-reports/opa-results.txt >> coverage-summary.md
          echo "```" >> coverage-summary.md

      - name: Add coverage report to PR
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          header: terraform-coverage
          path: coverage-summary.md
